// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderInformation.Repository;

#nullable disable

namespace OrderInformation.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderInformation.Core.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "KLM001",
                            CreatedDate = new DateTime(2023, 2, 4, 14, 12, 14, 621, DateTimeKind.Local).AddTicks(913),
                            Name = "Kurşun Kalem"
                        },
                        new
                        {
                            Id = 2,
                            Code = "KLM002",
                            CreatedDate = new DateTime(2023, 2, 4, 14, 12, 14, 621, DateTimeKind.Local).AddTicks(915),
                            Name = "Tükenmez Kalem"
                        });
                });

            modelBuilder.Entity("OrderInformation.Core.Models.OrderInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ArrivalAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerOrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatu")
                        .HasColumnType("int");

                    b.Property<string>("OutputAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantityUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemOrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<string>("WeightUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderInfos");
                });

            modelBuilder.Entity("OrderInformation.Core.Models.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 2, 4, 14, 12, 14, 621, DateTimeKind.Local).AddTicks(740),
                            Name = "Sipariş Alındı"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 2, 4, 14, 12, 14, 621, DateTimeKind.Local).AddTicks(754),
                            Name = "Yola Çıktı"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 2, 4, 14, 12, 14, 621, DateTimeKind.Local).AddTicks(755),
                            Name = "Dağıtım Merkezinde"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 2, 4, 14, 12, 14, 621, DateTimeKind.Local).AddTicks(756),
                            Name = "Dağıtıma Çıktı"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 2, 4, 14, 12, 14, 621, DateTimeKind.Local).AddTicks(757),
                            Name = "Teslim Edildi"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 2, 4, 14, 12, 14, 621, DateTimeKind.Local).AddTicks(758),
                            Name = "Teslim Edilemedi"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
